window.particlesJS = function (e, t) { var n = document.querySelector("#" + e + " > canvas"); n || (n = document.createElement("canvas"), n.style.width = "100%", n.style.height = "100%", document.getElementById(e).appendChild(n)); var i = n.getContext("2d"), r = n.width = n.offsetWidth, a = n.height = n.offsetHeight, s = [], o = t || {}, d = o.particles && o.particles.number && o.particles.number.value || 80, c = o.particles && o.particles.shape && o.particles.shape.images || [], l = [], h = 0, u = 0; for (h = 0; h < c.length; h++)for (var g = 0; g < (c[h].weight || 1); g++)l.push(c[h]); function p() { this.x = Math.random() * r, this.y = Math.random() * a, this.radius = o.particles && o.particles.size && o.particles.size.value || 10, this.baseRadius = this.radius, this.color = o.particles && o.particles.color && o.particles.color.value || "#ffffff", this.opacity = 0, this.targetOpacity = 1, this.speed = o.particles && o.particles.move && o.particles.move.speed || 1.5, this.angle = Math.random() * 2 * Math.PI, this.fadeInSpeed = .02; if (l.length > 0) { var e = l[Math.floor(Math.random() * l.length)]; this.img = new Image, this.img.src = e.src, this.img.width = e.width, this.img.height = e.height } } p.prototype.update = function () { this.x += Math.cos(this.angle) * this.speed, this.y += Math.sin(this.angle) * this.speed, this.x > r && (this.x = 0), this.x < 0 && (this.x = r), this.y > a && (this.y = 0), this.y < 0 && (this.y = a), this.opacity = Math.min(this.opacity + this.fadeInSpeed, this.targetOpacity) }, p.prototype.draw = function (e) { e.save(), e.globalAlpha = this.opacity, e.translate(this.x, this.y), this.img ? e.drawImage(this.img, -this.radius, -this.radius, 2 * this.radius, 2 * this.radius) : (e.beginPath(), e.arc(0, 0, this.radius, 0, 2 * Math.PI, !1), e.fillStyle = this.color, e.fill()), e.restore() }; for (h = 0; h < d; h++)s.push(new p); var f = { x: null, y: null }; window.addEventListener("mousemove", function (e) { f.x = e.clientX, f.y = e.clientY }), window.addEventListener("resize", function () { r = n.width = n.offsetWidth, a = n.height = n.offsetHeight }); function m() { i.clearRect(0, 0, r, a); for (h = 0; h < s.length; h++) { var e = s[h], t = f.x - e.x, n = f.y - e.y, i = Math.sqrt(t * t + n * n); i < 100 ? (e.radius = Math.min(e.baseRadius * 1.5, 30)) : (e.radius = e.baseRadius), e.update(), e.draw(i) } } !function e() { m(), requestAnimationFrame(e) }() };
// JavaScript source code
